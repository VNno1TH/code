[1mdiff --git a/USACO/silve/binary_search/.vscode/settings.json b/USACO/silve/binary_search/.vscode/settings.json[m
[1mdeleted file mode 100644[m
[1mindex 164b5e6..0000000[m
[1m--- a/USACO/silve/binary_search/.vscode/settings.json[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-{[m
[31m-    "files.associations": {[m
[31m-        "array": "cpp",[m
[31m-        "chrono": "cpp",[m
[31m-        "deque": "cpp",[m
[31m-        "forward_list": "cpp",[m
[31m-        "list": "cpp",[m
[31m-        "string": "cpp",[m
[31m-        "unordered_map": "cpp",[m
[31m-        "unordered_set": "cpp",[m
[31m-        "vector": "cpp",[m
[31m-        "string_view": "cpp",[m
[31m-        "format": "cpp",[m
[31m-        "generator": "cpp",[m
[31m-        "initializer_list": "cpp",[m
[31m-        "ranges": "cpp",[m
[31m-        "span": "cpp",[m
[31m-        "stacktrace": "cpp",[m
[31m-        "text_encoding": "cpp",[m
[31m-        "regex": "cpp",[m
[31m-        "valarray": "cpp",[m
[31m-        "iostream": "cpp"[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/USACO/silve/binary_search/RestaurantCustomer.java b/USACO/silve/binary_search/RestaurantCustomer.java[m
[1mindex d3b16f6..b809565 100644[m
[1m--- a/USACO/silve/binary_search/RestaurantCustomer.java[m
[1m+++ b/USACO/silve/binary_search/RestaurantCustomer.java[m
[36m@@ -2,44 +2,32 @@[m [mimport java.io.BufferedReader;[m
 import java.io.IOException;[m
 import java.io.InputStreamReader;[m
 import java.io.PrintWriter;[m
[31m-import java.util.Arrays;[m
 import java.util.StringTokenizer;[m
[32m+[m[32mimport java.util.TreeMap;[m
 [m
[31m-class pair{[m
[31m-    public int first,second;[m
 [m
[31m-    public pair(int first,int second)[m
[31m-    {[m
[31m-        this.first=first;[m
[31m-        this.second=second;[m
[31m-    }[m
[31m-}[m
 [m
 [m
[31m-public class restaurant_customer[m
[32m+[m[32mpublic class RestaurantCustomer[m
 {[m
 	public static void main(String[] args) throws IOException {[m
         BufferedReader in = new BufferedReader(new InputStreamReader(System.in));[m
         PrintWriter out = new PrintWriter(System.out);[m
 [m
         int n=Integer.parseInt(in.readLine());[m
[31m-        pair[] Customer_time =new pair[2*n];[m
[32m+[m[32m        TreeMap<Integer,Integer> Customer_time=new TreeMap<>();[m
         for(int i=0;i<2*n;i+=2)[m
         {[m
             StringTokenizer tmp=new StringTokenizer(in.readLine());[m
[31m-            int come=Integer.parseInt(tmp.nextToken());[m
[31m-            int go=Integer.parseInt(tmp.nextToken());[m
[31m-            Customer_time[i]=new pair(come,1);[m
[31m-            Customer_time[i+1]=new pair(go,-1);[m
[32m+[m[32m            Customer_time.put(Integer.parseInt(tmp.nextToken()),1);[m
[32m+[m[32m            Customer_time.put(Integer.parseInt(tmp.nextToken()),-1);[m
         }[m
[31m-        Arrays.sort(Customer_time,(t1,t2)->{[m
[31m-            return  t1.first-t2.first;[m
[31m-        });[m
[32m+[m
 [m
         int temp=0,ans=0;[m
[31m-        for(var i: Customer_time)[m
[32m+[m[32m        for(var i: Customer_time.values())[m
         {[m
[31m-            temp+=i.second;[m
[32m+[m[32m            temp+=i;[m
             ans=Integer.max(ans,temp);[m
 [m
         }[m
[1mdiff --git a/USACO/silve/binary_search/TripTastic.cpp b/USACO/silve/binary_search/TripTastic.cpp[m
[1mindex 7c77ba6..5540d20 100644[m
[1m--- a/USACO/silve/binary_search/TripTastic.cpp[m
[1m+++ b/USACO/silve/binary_search/TripTastic.cpp[m
[36m@@ -1,6 +1,6 @@[m
 #include "bits/stdc++.h"[m
 using namespace std;[m
[31m-[m
[32m+[m[32m#define ll long long[m
 int main()[m
 {[m
     int T;[m
[36m@@ -9,13 +9,49 @@[m [mint main()[m
     {[m
         int N, M, K;[m
         cin >> N >> M >> K;[m
[31m-        vector<vector<int>> hotel(N, vector<int>(M));[m
[32m+[m[41m        [m
[32m+[m	[32mvector<vector<ll>> prefix_hotel(N+1,vector<ll> (M+1));[m
[32m+[m[41m	[m
[32m+[m	[32mfor(int i=1;i<=N;i++)[m
[32m+[m	[32m{[m
[32m+[m		[32mfor(int j=1;j<=M;j++){[m
[32m+[m[41m    [m		[32mcin>>prefix_hotel[i][j];[m
[32m+[m[32m            prefix_hotel[i][j]+=prefix_hotel[i-1][j]+prefix_hotel[i][j-1]-prefix_hotel[i-1][j-1];[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m	[32mauto return_sum=[&](int a,int b,int A,int B)[m
[32m+[m[32m    {[m
[32m+[m[32m        return prefix_hotel[A][B] -prefix_hotel[a-1][B]-prefix_hotel[A][b-1]+prefix_hotel[a-1][b-1];[m
[32m+[m[32m    };// return sum[m
[32m+[m
[32m+[m[32m    int best=-1;[m
     for(int i=0;i<N;i++)[m
     {[m
         for(int j=0;j<M;j++)[m
         {[m
[31m-                cin >> hotel[i][j];[m
[32m+[m[32m            if(return_sum(i+1,j+1,i+1,j+1)==0)  continue;[m
[32m+[m[32m            int lo=0;[m
[32m+[m[32m            int hi=max(N,M);[m
[32m+[m[32m            int valid=-1;[m
[32m+[m
[32m+[m[32m            while(lo<=hi)[m
[32m+[m[32m            {[m
[32m+[m[32m                int mid=(lo+hi)/2;[m
[32m+[m[32m                int a=max(0,i-mid),A=min(N-1,i+mid);[m
[32m+[m[32m                int b=max(0,j-mid),B=min(M-1,j+mid);[m
[32m+[m[32m                if(return_sum(a+1,b+1,A+1,B+1)-1>=K)[m
[32m+[m[32m                {[m
[32m+[m[32m                    valid=mid;[m
[32m+[m[32m                    hi=mid-1;[m
[32m+[m[32m                }[m
[32m+[m[32m                else{[m
[32m+[m[32m                    lo=mid+1;[m
                 }[m
             }[m
[32m+[m[32m            if(valid!=-1){ best=best==-1 ?valid:min(best,valid); }[m
[32m+[m[32m        }[m
[32m+[m[41m         [m
[32m+[m[32m    }[m
[32m+[m[32m    cout<<best<<endl;[m
     }[m
 }[m
